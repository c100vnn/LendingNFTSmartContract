/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Reserve, ReserveInterface } from "../Reserve";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mainToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "distributeProfit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalanceOfReserve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mainToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105af3803806105af83398101604081905261002f916100d5565b61003833610069565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055610107565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d057600080fd5b919050565b600080604083850312156100e7578182fd5b6100f0836100b9565b91506100fe602084016100b9565b90509250929050565b610499806101166000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063851073671161005b57806385107367146100d25780638da5cb5b146100e5578063aba722b0146100f6578063f2fde38b1461010957600080fd5b80632a0826c0146100825780633fc15f151461009d578063715018a6146100c8575b600080fd5b61008a61011c565b6040519081526020015b60405180910390f35b6001546100b0906001600160a01b031681565b6040516001600160a01b039091168152602001610094565b6100d061019d565b005b6002546100b0906001600160a01b031681565b6000546001600160a01b03166100b0565b6100d0610104366004610402565b610208565b6100d06101173660046103e1565b6102aa565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561016057600080fd5b505afa158015610174573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610198919061044b565b905090565b6000546001600160a01b031633146101fc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6102066000610375565b565b6002546001600160a01b0316331461021f57600080fd5b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b15801561026d57600080fd5b505af1158015610281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a5919061042b565b505050565b6000546001600160a01b031633146103045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101f3565b6001600160a01b0381166103695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f3565b61037281610375565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146103dc57600080fd5b919050565b6000602082840312156103f2578081fd5b6103fb826103c5565b9392505050565b60008060408385031215610414578081fd5b61041d836103c5565b946020939093013593505050565b60006020828403121561043c578081fd5b815180151581146103fb578182fd5b60006020828403121561045c578081fd5b505191905056fea2646970667358221220d95937aff8a69d9d3d018d2a004cd866891e2e3d472ba791a12b93cfc8be591064736f6c63430008040033";

export class Reserve__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _mainToken: string,
    _stakeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Reserve> {
    return super.deploy(
      _mainToken,
      _stakeAddress,
      overrides || {}
    ) as Promise<Reserve>;
  }
  getDeployTransaction(
    _mainToken: string,
    _stakeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mainToken,
      _stakeAddress,
      overrides || {}
    );
  }
  attach(address: string): Reserve {
    return super.attach(address) as Reserve;
  }
  connect(signer: Signer): Reserve__factory {
    return super.connect(signer) as Reserve__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReserveInterface {
    return new utils.Interface(_abi) as ReserveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Reserve {
    return new Contract(address, _abi, signerOrProvider) as Reserve;
  }
}
