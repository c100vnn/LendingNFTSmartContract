/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "packageId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalProfit",
        type: "uint256",
      },
    ],
    name: "StakeReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "packageId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalProfit",
        type: "uint256",
      },
    ],
    name: "StakeUpdate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minStaking",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockDays",
        type: "uint256",
      },
    ],
    name: "addStakePackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
    ],
    name: "calculateMyProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
    ],
    name: "getAprOfPackage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
    ],
    name: "getStakeInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakePackages",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minStaking",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDays",
            type: "uint256",
          },
        ],
        internalType: "struct Staking.StakePackage[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mainToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
    ],
    name: "removeStakePackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve",
    outputs: [
      {
        internalType: "contract Reserve",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setMaxStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserveAddress",
        type: "address",
      },
    ],
    name: "setReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakePackages",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minStaking",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockDays",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timePoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalProfit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
    ],
    name: "unStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newMinStaking",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newLockDays",
        type: "uint256",
      },
    ],
    name: "updateStakePackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006004556a05ca4ec2a79a7f670000006005553480156200002557600080fd5b50604051620018f0380380620018f083398101604081905262000048916200019b565b62000053336200014b565b60018055600380546001600160a01b0319166001600160a01b03831617905560408051606081018252600060208201819052918101919091526089815260126200009f90600a62000214565b620000ac906064620002d5565b602082019081526005604083019081526006805460018101825560009190915292517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60039094029384015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4190910155506200030d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620001ad578081fd5b81516001600160a01b0381168114620001c4578182fd5b9392505050565b600181815b808511156200020c578160001904821115620001f057620001f0620002f7565b80851615620001fe57918102915b93841c9390800290620001d0565b509250929050565b6000620001c460ff8416836000826200023057506001620002cf565b816200023f57506000620002cf565b8160018114620002585760028114620002635762000283565b6001915050620002cf565b60ff841115620002775762000277620002f7565b50506001821b620002cf565b5060208310610133831016604e8410600b8410161715620002a8575081810a620002cf565b620002b48383620001cb565b8060001904821115620002cb57620002cb620002f7565b0290505b92915050565b6000816000190483118215151615620002f257620002f2620002f7565b500290565b634e487b7160e01b600052601160045260246000fd5b6115d3806200031d6000396000f3fe608060405234801561001057600080fd5b50600436106101205760003560e01c8063715018a6116100ad578063cd3293de11610071578063cd3293de146102c8578063dd9d0826146102db578063ea2cb112146102f0578063f2fde38b14610303578063f6f7b6e81461031657600080fd5b8063715018a6146102765780637b0472f01461027e5780638da5cb5b146102915780639cecc80a146102a2578063b4632b2f146102b557600080fd5b80633fc15f15116100f45780633fc15f15146101b057806351197b78146101db578063584b62a1146101f05780635d3eea91146102505780636fc148371461026357600080fd5b8062d034e314610125578063098134821461014b57806309e1f79614610173578063313ce567146101a1575b600080fd5b6101386101333660046113b2565b610329565b6040519081526020015b60405180910390f35b61015e6101593660046113b2565b6104b1565b60408051928352602083019190915201610142565b6101866101813660046113b2565b610589565b60408051938452602084019290925290820152606001610142565b60405160128152602001610142565b6003546101c3906001600160a01b031681565b6040516001600160a01b039091168152602001610142565b6101ee6101e9366004611403565b6105bc565b005b6102306101fe366004611369565b600760209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610142565b6101ee61025e3660046113b2565b6106d0565b6101ee6102713660046113b2565b610aae565b6101ee610aeb565b6101ee61028c3660046113e2565b610b21565b6000546001600160a01b03166101c3565b6101ee6102b036600461134f565b610ee8565b6101ee6102c33660046113b2565b610f34565b6002546101c3906001600160a01b031681565b6102e3610fe7565b604051610142919061145f565b6101386102fe3660046113b2565b611064565b6101ee61031136600461134f565b6110aa565b6101ee61032436600461142e565b611145565b6000806006838154811061034d57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160000154116103855760405162461bcd60e51b815260040161037c906114b8565b60405180910390fd5b3360009081526007602090815260408083208584529091529020600101544214156103e25760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964207374616b6560981b604482015260640161037c565b3360009081526007602090815260408083208584529091528120600201546006805461047f92620186a0926104739261047991908990811061043457634e487b7160e01b600052603260045260246000fd5b600091825260208083206003909202909101543383526007825260408084208c85529092529120600101546104799062015180906104739042906112b3565b906112bf565b906112cb565b3360009081526007602090815260408083208784529091529020600301549091506104aa90826112d7565b9392505050565b6000806000600684815481106104d757634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160000154116105065760405162461bcd60e51b815260040161037c906114b8565b3360009081526007602090815260408083208684529091529020600101544214156105635760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964207374616b6560981b604482015260640161037c565b505033600090815260076020908152604080832093835292905220600281015490549091565b6006818154811061059957600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b6000546001600160a01b031633146105e65760405162461bcd60e51b815260040161037c906114e4565b6000831161062d5760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964207061636b616765207261746560601b604482015260640161037c565b604080516060810182529384526020840192835283019081526006805460018101825560009190915292517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60039094029384015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4190910155565b33600090815260076020908152604080832084845290915290206002015461072a5760405162461bcd60e51b815260206004820152600d60248201526c1cdd185ad9481a5b9d985b1a59609a1b604482015260640161037c565b610772620151806006838154811061075257634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600201546112cb90919063ffffffff16565b33600090815260076020908152604080832085845290915290206001015461079b9042906112b3565b116107de5760405162461bcd60e51b81526020600482015260136024820152726e6f74207265616368206c6f636b2074696d6560681b604482015260640161037c565b60006006828154811061080157634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160000154116108525760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207061636b61676560881b604482015260640161037c565b33600090815260076020908152604080832084845290915290206001015461087957600080fd5b3360009081526007602090815260408083208484529091528120600201546006805461090a92620186a092610473926104799190889081106108cb57634e487b7160e01b600052603260045260246000fd5b600091825260208083206003909202909101543383526007825260408084208b85529092529120600101546104799062015180906104739042906112b3565b3360009081526007602090815260408083208684529091528120600301549192509061093690836112d7565b3360008181526007602090815260408083208884529091528082206002810180548483556003808401869055918590556001909201939093559154905163a9059cbb60e01b8152600481019390935260248301829052929350916001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156109bd57600080fd5b505af11580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f59190611392565b50600254604051630aba722b60e41b8152336004820152602481018490526001600160a01b039091169063aba722b090604401600060405180830381600087803b158015610a4257600080fd5b505af1158015610a56573d6000803e3d6000fd5b505060408051338152602081018890524281830152606081018590526080810186905290517faa2be6aa3a98bc7556019a4e6c6e14e7352a24fb3cf83033d604c32b911ee4f493509081900360a0019150a150505050565b6000546001600160a01b03163314610ad85760405162461bcd60e51b815260040161037c906114e4565b6004548111610ae657600080fd5b600555565b6000546001600160a01b03163314610b155760405162461bcd60e51b815260040161037c906114e4565b610b1f60006112e3565b565b600060068281548110610b4457634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016000015411610b955760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207061636b61676560881b604482015260640161037c565b600354604051636eb1769f60e11b815233600482015230602482015283916001600160a01b03169063dd62ed3e9060440160206040518083038186803b158015610bde57600080fd5b505afa158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1691906113ca565b1015610c5b5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161037c565b600554600454610c6b90846112d7565b1115610c7657600080fd5b60068181548110610c9757634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160010154821015610cb557600080fd5b6003546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610d0757600080fd5b505af1158015610d1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3f9190611392565b5033600090815260076020908152604080832084845290915290206002015415610e045733600090815260076020908152604080832084845290915281206002015460068054610db592620186a092610473926104799190889081106108cb57634e487b7160e01b600052603260045260246000fd5b336000908152600760209081526040808320868452909152902060030154909150610de090826112d7565b33600090815260076020908152604080832086845290915290206003015550610e22565b33600090815260076020908152604080832084845290915290204290555b336000908152600760209081526040808320848452909152902042600182015560020154610e5090836112d7565b336000908152600760209081526040808320858452909152902060020155600454610e7b90836112d7565b6004553360008181526007602090815260408083208584528252918290206003015482519384529083018490524283830152606083018590526080830152517fddbea484266df9fbce2e324258f1cc6e298f12b0f50f66d936699159ce43f6fd9181900360a00190a15050565b6000546001600160a01b03163314610f125760405162461bcd60e51b815260040161037c906114e4565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610f5e5760405162461bcd60e51b815260040161037c906114e4565b600060068281548110610f8157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016000015411610fb05760405162461bcd60e51b815260040161037c906114b8565b600060068281548110610fd357634e487b7160e01b600052603260045260246000fd5b600091825260209091206003909102015550565b60606006805480602002602001604051908101604052809291908181526020016000905b8282101561105b578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061100b565b50505050905090565b60006110a461016d6006848154811061108d57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060039091020154906112cb565b92915050565b6000546001600160a01b031633146110d45760405162461bcd60e51b815260040161037c906114e4565b6001600160a01b0381166111395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161037c565b611142816112e3565b50565b6000546001600160a01b0316331461116f5760405162461bcd60e51b815260040161037c906114e4565b60006006858154811061119257634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160000154116111c15760405162461bcd60e51b815260040161037c906114b8565b600083116112085760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964207061636b616765207261746560601b604482015260640161037c565b826006858154811061122a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160000181905550816006858154811061126157634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160010181905550806006858154811061129857634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016002018190555050505050565b60006104aa8284611570565b60006104aa8284611531565b60006104aa8284611551565b60006104aa8284611519565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461134a57600080fd5b919050565b600060208284031215611360578081fd5b6104aa82611333565b6000806040838503121561137b578081fd5b61138483611333565b946020939093013593505050565b6000602082840312156113a3578081fd5b815180151581146104aa578182fd5b6000602082840312156113c3578081fd5b5035919050565b6000602082840312156113db578081fd5b5051919050565b600080604083850312156113f4578182fd5b50508035926020909101359150565b600080600060608486031215611417578081fd5b505081359360208301359350604090920135919050565b60008060008060808587031215611443578081fd5b5050823594602084013594506040840135936060013592509050565b602080825282518282018190526000919060409081850190868401855b828110156114ab578151805185528681015187860152850151858501526060909301929085019060010161147c565b5091979650505050505050565b602080825260129082015271125b9d985b1a59081c1858dad859d948125160721b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561152c5761152c611587565b500190565b60008261154c57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561156b5761156b611587565b500290565b60008282101561158257611582611587565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220f6bdd92b26037623bb7fb0e7ec12ba29c9fe1406985f7d12d2eed03bcd5d045764736f6c63430008040033";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _tokenAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(_tokenAddr, overrides || {}) as Promise<Staking>;
  }
  getDeployTransaction(
    _tokenAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenAddr, overrides || {});
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
