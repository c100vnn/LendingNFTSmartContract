/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "packageId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "profitTaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalProfit",
        type: "uint256",
      },
    ],
    name: "ProfitTaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "packageId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalProfit",
        type: "uint256",
      },
    ],
    name: "StakeReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "packageId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "addingAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalProfit",
        type: "uint256",
      },
    ],
    name: "StakeUpdate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minStaking",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockDays",
        type: "uint256",
      },
    ],
    name: "addStakePackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
    ],
    name: "calculateMyProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
    ],
    name: "getAprOfPackage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakePackages",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minStaking",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDays",
            type: "uint256",
          },
        ],
        internalType: "struct Staking.StakePackage[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mainToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
    ],
    name: "removeStakePackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve",
    outputs: [
      {
        internalType: "contract Reserve",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserveAddress",
        type: "address",
      },
    ],
    name: "setReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakePackages",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minStaking",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockDays",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "timePoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalProfit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
    ],
    name: "takeProfit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
    ],
    name: "unStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_packageId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newMinStaking",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newLockDays",
        type: "uint256",
      },
    ],
    name: "updateStakePackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006004556a05ca4ec2a79a7f670000006005553480156200002557600080fd5b50604051620019c8380380620019c883398101604081905262000048916200019c565b62000053336200014c565b60018055600380546001600160a01b0319166001600160a01b03831617905560408051606081018252600060208201819052918101919091526089815260126200009f90600a62000215565b620000ad906101f4620002d6565b602082019081526005604083019081526006805460018101825560009190915292517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60039094029384015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4190910155506200030e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620001ae578081fd5b81516001600160a01b0381168114620001c5578182fd5b9392505050565b600181815b808511156200020d578160001904821115620001f157620001f1620002f8565b80851615620001ff57918102915b93841c9390800290620001d1565b509250929050565b6000620001c560ff8416836000826200023157506001620002d0565b816200024057506000620002d0565b8160018114620002595760028114620002645762000284565b6001915050620002d0565b60ff841115620002785762000278620002f8565b50506001821b620002d0565b5060208310610133831016604e8410600b8410161715620002a9575081810a620002d0565b620002b58383620001cc565b8060001904821115620002cc57620002cc620002f8565b0290505b92915050565b6000816000190483118215151615620002f357620002f3620002f8565b500290565b634e487b7160e01b600052601160045260246000fd5b6116aa806200031e6000396000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c80637b0472f0116100a2578063cd3293de11610071578063cd3293de1461026f578063dd9d082614610282578063ea2cb11214610297578063f2fde38b146102aa578063f6f7b6e8146102bd57600080fd5b80637b0472f0146102255780638da5cb5b146102385780639cecc80a14610249578063b4632b2f1461025c57600080fd5b8063372caeb8116100e9578063372caeb8146101925780633fc15f15146101a557806351197b78146101d0578063584b62a1146101e3578063715018a61461021d57600080fd5b8062d034e31461011a57806309e1f79614610140578063133f1f501461016e578063313ce56714610183575b600080fd5b61012d61012836600461145b565b6102d0565b6040519081526020015b60405180910390f35b61015361014e36600461145b565b6103f8565b60408051938452602084019290925290820152606001610137565b61018161017c36600461145b565b61042b565b005b60405160128152602001610137565b6101816101a036600461148b565b610652565b6003546101b8906001600160a01b031681565b6040516001600160a01b039091168152602001610137565b6101816101de3660046114ac565b610aad565b6101536101f1366004611412565b600760209081526000928352604080842090915290825290208054600182015460029092015490919083565b610181610bc1565b61018161023336600461148b565b610bf7565b6000546001600160a01b03166101b8565b6101816102573660046113f8565b610f91565b61018161026a36600461145b565b610fdd565b6002546101b8906001600160a01b031681565b61028a611090565b6040516101379190611536565b61012d6102a536600461145b565b61110d565b6101816102b83660046113f8565b611153565b6101816102cb3660046114d7565b6111ee565b600080600683815481106102f457634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600001541161032c5760405162461bcd60e51b81526004016103239061158f565b60405180910390fd5b336000908152600760209081526040808320858452909152812060010154600680546103c692620186a0926103ba926103c091908990811061037e57634e487b7160e01b600052603260045260246000fd5b600091825260208083206003909202909101543383526007825260408084208c85529092529120546103c09062015180906103ba90429061135c565b90611368565b90611374565b3360009081526007602090815260408083208784529091529020600201549091506103f19082611380565b9392505050565b6006818154811061040857600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b60006006828154811061044e57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600001541161047d5760405162461bcd60e51b81526004016103239061158f565b3360009081526007602090815260408083208484529091528120600101546006805461050b92620186a0926103ba926103c09190889081106104cf57634e487b7160e01b600052603260045260246000fd5b600091825260208083206003909202909101543383526007825260408084208b85529092529120546103c09062015180906103ba90429061135c565b336000908152600760209081526040808320868452909152812060020154919250906105379083611380565b101561054257600080fd5b33600090815260076020908152604080832085845290915281206002015461056a9083611380565b336000818152600760209081526040808320888452909152908190204290556002549051630aba722b60e41b81526004810192909252602482018390529192506001600160a01b039091169063aba722b090604401600060405180830381600087803b1580156105d957600080fd5b505af11580156105ed573d6000803e3d6000fd5b5050336000818152600760209081526040808320898452909152808220600201829055517fedab1cb56cfd6e59e5a97909379aff51cd4f1c26cf58726c177748efdf9e52fc9450610645935087914291879190611508565b60405180910390a1505050565b3360009081526007602090815260408083208484529091529020600101546106ac5760405162461bcd60e51b815260206004820152600d60248201526c1cdd185ad9481a5b9d985b1a59609a1b6044820152606401610323565b6106f462015180600683815481106106d457634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016002015461137490919063ffffffff16565b33600090815260076020908152604080832085845290915290205461071a90429061135c565b1161075d5760405162461bcd60e51b81526020600482015260136024820152726e6f74207265616368206c6f636b2074696d6560681b6044820152606401610323565b60006006828154811061078057634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160000154116107d15760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207061636b61676560881b6044820152606401610323565b3360009081526007602090815260408083208484529091529020600101548211156108495760405162461bcd60e51b815260206004820152602260248201527f616d6f756e74206d757374206c657373207468616e207374616b6520616d6f756044820152611b9d60f21b6064820152608401610323565b33600090815260076020908152604080832084845290915290205461086d57600080fd5b60008290506006828154811061089357634e487b7160e01b600052603260045260246000fd5b600091825260208083206001600390930201820154338452600782526040808520878652909252922001546108c8908561135c565b10156108ee57503360009081526007602090815260408083208484529091529020600101545b3360009081526007602090815260408083208584529091528120600101546006805461094092620186a0926103ba926103c091908990811061037e57634e487b7160e01b600052603260045260246000fd5b33600090815260076020908152604080832087845290915290206002015490915061096b9082611380565b336000908152600760209081526040808320878452909152902060028101919091556001015461099b908361135c565b33600081815260076020908152604080832088845290915290819020600181019390935542909255600354915163a9059cbb60e01b81526004810191909152602481018490526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610a1057600080fd5b505af1158015610a24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a48919061143b565b50336000818152600760209081526040808320878452909152908190206002015490517faa2be6aa3a98bc7556019a4e6c6e14e7352a24fb3cf83033d604c32b911ee4f492610a9f92909187914291889190611508565b60405180910390a150505050565b6000546001600160a01b03163314610ad75760405162461bcd60e51b8152600401610323906115bb565b60008311610b1e5760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964207061636b616765207261746560601b6044820152606401610323565b604080516060810182529384526020840192835283019081526006805460018101825560009190915292517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60039094029384015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4190910155565b6000546001600160a01b03163314610beb5760405162461bcd60e51b8152600401610323906115bb565b610bf5600061138c565b565b600060068281548110610c1a57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016000015411610c6b5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207061636b61676560881b6044820152606401610323565b600354604051636eb1769f60e11b815233600482015230602482015283916001600160a01b03169063dd62ed3e9060440160206040518083038186803b158015610cb457600080fd5b505afa158015610cc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cec9190611473565b1015610d315760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610323565b600554600454610d419084611380565b1115610d4c57600080fd5b60068181548110610d6d57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160010154821015610d8b57600080fd5b6003546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610ddd57600080fd5b505af1158015610df1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e15919061143b565b5033600090815260076020908152604080832084845290915290206001015415610ed65733600090815260076020908152604080832084845290915281206001015460068054610e8b92620186a0926103ba926103c09190889081106104cf57634e487b7160e01b600052603260045260246000fd5b336000908152600760209081526040808320868452909152902060020154909150610eb69082611380565b336000908152600760209081526040808320868452909152902060020155505b336000908152600760209081526040808320848452909152902042815560010154610f019083611380565b336000908152600760209081526040808320858452909152902060010155600454610f2c9083611380565b600455336000818152600760209081526040808320858452909152908190206002015490517fddbea484266df9fbce2e324258f1cc6e298f12b0f50f66d936699159ce43f6fd92610f8592909185914291889190611508565b60405180910390a15050565b6000546001600160a01b03163314610fbb5760405162461bcd60e51b8152600401610323906115bb565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146110075760405162461bcd60e51b8152600401610323906115bb565b60006006828154811061102a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160000154116110595760405162461bcd60e51b81526004016103239061158f565b60006006828154811061107c57634e487b7160e01b600052603260045260246000fd5b600091825260209091206003909102015550565b60606006805480602002602001604051908101604052809291908181526020016000905b8282101561110457838290600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050815260200190600101906110b4565b50505050905090565b600061114d61016d6006848154811061113657634e487b7160e01b600052603260045260246000fd5b600091825260209091206003909102015490611374565b92915050565b6000546001600160a01b0316331461117d5760405162461bcd60e51b8152600401610323906115bb565b6001600160a01b0381166111e25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610323565b6111eb8161138c565b50565b6000546001600160a01b031633146112185760405162461bcd60e51b8152600401610323906115bb565b60006006858154811061123b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600001541161126a5760405162461bcd60e51b81526004016103239061158f565b600083116112b15760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964207061636b616765207261746560601b6044820152606401610323565b82600685815481106112d357634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160000181905550816006858154811061130a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160010181905550806006858154811061134157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016002018190555050505050565b60006103f18284611647565b60006103f18284611608565b60006103f18284611628565b60006103f182846115f0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146113f357600080fd5b919050565b600060208284031215611409578081fd5b6103f1826113dc565b60008060408385031215611424578081fd5b61142d836113dc565b946020939093013593505050565b60006020828403121561144c578081fd5b815180151581146103f1578182fd5b60006020828403121561146c578081fd5b5035919050565b600060208284031215611484578081fd5b5051919050565b6000806040838503121561149d578182fd5b50508035926020909101359150565b6000806000606084860312156114c0578081fd5b505081359360208301359350604090920135919050565b600080600080608085870312156114ec578081fd5b5050823594602084013594506040840135936060013592509050565b6001600160a01b03959095168552602085019390935260408401919091526060830152608082015260a00190565b602080825282518282018190526000919060409081850190868401855b828110156115825781518051855286810151878601528501518585015260609093019290850190600101611553565b5091979650505050505050565b602080825260129082015271125b9d985b1a59081c1858dad859d948125160721b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156116035761160361165e565b500190565b60008261162357634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156116425761164261165e565b500290565b6000828210156116595761165961165e565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b3c7ac0ea0198f901ee9796f331b7f66ca9bd548d748c77db9fa96cde1eed63064736f6c63430008040033";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _tokenAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(_tokenAddr, overrides || {}) as Promise<Staking>;
  }
  getDeployTransaction(
    _tokenAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenAddr, overrides || {});
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
